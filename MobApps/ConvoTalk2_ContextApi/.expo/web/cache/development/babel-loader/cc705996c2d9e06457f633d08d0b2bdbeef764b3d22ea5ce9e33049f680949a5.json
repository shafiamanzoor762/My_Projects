{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { requireNativeComponent } from \"react-native-web/dist/index\";\nimport PdfViewNativeComponent, { Commands as PdfViewCommands } from \"./fabric/RNPDFPdfNativeComponent\";\nimport ReactNativeBlobUtil from 'react-native-blob-util';\nimport { ViewPropTypes } from 'deprecated-react-native-prop-types';\nvar SHA1 = require('crypto-js/sha1');\nimport PdfView from \"./PdfView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Pdf = function (_Component) {\n  _inherits(Pdf, _Component);\n  var _super = _createSuper(Pdf);\n  function Pdf(props) {\n    var _this;\n    _classCallCheck(this, Pdf);\n    _this = _super.call(this, props);\n    _this._loadFromSource = function (newSource) {\n      var source = Image.resolveAssetSource(newSource) || {};\n      var uri = source.uri || '';\n      if (_this._mounted) {\n        _this.setState({\n          isDownloaded: false,\n          path: '',\n          progress: 0\n        });\n      }\n      var filename = source.cacheFileName || SHA1(uri) + '.pdf';\n      var cacheFile = ReactNativeBlobUtil.fs.dirs.CacheDir + '/' + filename;\n      if (source.cache) {\n        ReactNativeBlobUtil.fs.stat(cacheFile).then(function (stats) {\n          if (!Boolean(source.expiration) || source.expiration * 1000 + stats.lastModified > new Date().getTime()) {\n            if (_this._mounted) {\n              _this.setState({\n                path: cacheFile,\n                isDownloaded: true\n              });\n            }\n          } else {\n            _this._prepareFile(source);\n          }\n        }).catch(function () {\n          _this._prepareFile(source);\n        });\n      } else {\n        _this._prepareFile(source);\n      }\n    };\n    _this._prepareFile = function () {\n      var _ref = _asyncToGenerator(function* (source) {\n        try {\n          if (source.uri) {\n            var uri = source.uri || '';\n            var isNetwork = !!(uri && uri.match(/^https?:\\/\\//));\n            var isAsset = !!(uri && uri.match(/^bundle-assets:\\/\\//));\n            var isBase64 = !!(uri && uri.match(/^data:application\\/pdf;base64/));\n            var filename = source.cacheFileName || SHA1(uri) + '.pdf';\n            var cacheFile = ReactNativeBlobUtil.fs.dirs.CacheDir + '/' + filename;\n            _this._unlinkFile(cacheFile);\n            if (isNetwork) {\n              _this._downloadFile(source, cacheFile);\n            } else if (isAsset) {\n              ReactNativeBlobUtil.fs.cp(uri, cacheFile).then(function () {\n                if (_this._mounted) {\n                  _this.setState({\n                    path: cacheFile,\n                    isDownloaded: true,\n                    progress: 1\n                  });\n                }\n              }).catch(function () {\n                var _ref2 = _asyncToGenerator(function* (error) {\n                  _this._unlinkFile(cacheFile);\n                  _this._onError(error);\n                });\n                return function (_x2) {\n                  return _ref2.apply(this, arguments);\n                };\n              }());\n            } else if (isBase64) {\n              var data = uri.replace(/data:application\\/pdf;base64,/i, '');\n              ReactNativeBlobUtil.fs.writeFile(cacheFile, data, 'base64').then(function () {\n                if (_this._mounted) {\n                  _this.setState({\n                    path: cacheFile,\n                    isDownloaded: true,\n                    progress: 1\n                  });\n                }\n              }).catch(function () {\n                var _ref3 = _asyncToGenerator(function* (error) {\n                  _this._unlinkFile(cacheFile);\n                  _this._onError(error);\n                });\n                return function (_x3) {\n                  return _ref3.apply(this, arguments);\n                };\n              }());\n            } else {\n              if (_this._mounted) {\n                _this.setState({\n                  path: unescape(uri.replace(/file:\\/\\//i, '')),\n                  isDownloaded: true\n                });\n              }\n            }\n          } else {\n            _this._onError(new Error('no pdf source!'));\n          }\n        } catch (e) {\n          _this._onError(e);\n        }\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    _this._downloadFile = function () {\n      var _ref4 = _asyncToGenerator(function* (source, cacheFile) {\n        if (_this.lastRNBFTask) {\n          _this.lastRNBFTask.cancel(function (err) {});\n          _this.lastRNBFTask = null;\n        }\n        var tempCacheFile = cacheFile + '.tmp';\n        _this._unlinkFile(tempCacheFile);\n        _this.lastRNBFTask = ReactNativeBlobUtil.config({\n          path: tempCacheFile,\n          trusty: _this.props.trustAllCerts\n        }).fetch(source.method ? source.method : 'GET', source.uri, source.headers ? source.headers : {}, source.body ? source.body : \"\").progress(function (received, total) {\n          _this.props.onLoadProgress && _this.props.onLoadProgress(received / total);\n          if (_this._mounted) {\n            _this.setState({\n              progress: received / total\n            });\n          }\n        }).catch(function () {\n          var _ref5 = _asyncToGenerator(function* (error) {\n            _this._onError(error);\n          });\n          return function (_x6) {\n            return _ref5.apply(this, arguments);\n          };\n        }());\n        _this.lastRNBFTask.then(function () {\n          var _ref6 = _asyncToGenerator(function* (res) {\n            _this.lastRNBFTask = null;\n            if (res && res.respInfo && res.respInfo.headers && !res.respInfo.headers[\"Content-Encoding\"] && !res.respInfo.headers[\"Transfer-Encoding\"] && res.respInfo.headers[\"Content-Length\"]) {\n              var expectedContentLength = res.respInfo.headers[\"Content-Length\"];\n              var actualContentLength;\n              try {\n                var fileStats = yield ReactNativeBlobUtil.fs.stat(res.path());\n                if (!fileStats || !fileStats.size) {\n                  throw new Error(\"FileNotFound:\" + source.uri);\n                }\n                actualContentLength = fileStats.size;\n              } catch (error) {\n                throw new Error(\"DownloadFailed:\" + source.uri);\n              }\n              if (expectedContentLength != actualContentLength) {\n                throw new Error(\"DownloadFailed:\" + source.uri);\n              }\n            }\n            _this._unlinkFile(cacheFile);\n            ReactNativeBlobUtil.fs.cp(tempCacheFile, cacheFile).then(function () {\n              if (_this._mounted) {\n                _this.setState({\n                  path: cacheFile,\n                  isDownloaded: true,\n                  progress: 1\n                });\n              }\n              _this._unlinkFile(tempCacheFile);\n            }).catch(function () {\n              var _ref7 = _asyncToGenerator(function* (error) {\n                throw error;\n              });\n              return function (_x8) {\n                return _ref7.apply(this, arguments);\n              };\n            }());\n          });\n          return function (_x7) {\n            return _ref6.apply(this, arguments);\n          };\n        }()).catch(function () {\n          var _ref8 = _asyncToGenerator(function* (error) {\n            _this._unlinkFile(tempCacheFile);\n            _this._unlinkFile(cacheFile);\n            _this._onError(error);\n          });\n          return function (_x9) {\n            return _ref8.apply(this, arguments);\n          };\n        }());\n      });\n      return function (_x4, _x5) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n    _this._unlinkFile = function () {\n      var _ref9 = _asyncToGenerator(function* (file) {\n        try {\n          yield ReactNativeBlobUtil.fs.unlink(file);\n        } catch (e) {}\n      });\n      return function (_x10) {\n        return _ref9.apply(this, arguments);\n      };\n    }();\n    _this.setNativeProps = function (nativeProps) {\n      if (_this._root) {\n        _this._root.setNativeProps(nativeProps);\n      }\n    };\n    _this._onChange = function (event) {\n      var message = event.nativeEvent.message.split('|');\n      if (message.length > 0) {\n        if (message.length > 5) {\n          message[4] = message.splice(4).join('|');\n        }\n        if (message[0] === 'loadComplete') {\n          var tableContents;\n          try {\n            tableContents = message[4] && JSON.parse(message[4]);\n          } catch (e) {\n            tableContents = message[4];\n          }\n          _this.props.onLoadComplete && _this.props.onLoadComplete(Number(message[1]), _this.state.path, {\n            width: Number(message[2]),\n            height: Number(message[3])\n          }, tableContents);\n        } else if (message[0] === 'pageChanged') {\n          _this.props.onPageChanged && _this.props.onPageChanged(Number(message[1]), Number(message[2]));\n        } else if (message[0] === 'error') {\n          _this._onError(new Error(message[1]));\n        } else if (message[0] === 'pageSingleTap') {\n          _this.props.onPageSingleTap && _this.props.onPageSingleTap(Number(message[1]), Number(message[2]), Number(message[3]));\n        } else if (message[0] === 'scaleChanged') {\n          _this.props.onScaleChanged && _this.props.onScaleChanged(Number(message[1]));\n        } else if (message[0] === 'linkPressed') {\n          _this.props.onPressLink && _this.props.onPressLink(message[1]);\n        }\n      }\n    };\n    _this._onError = function (error) {\n      _this.props.onError && _this.props.onError(error);\n    };\n    _this.state = {\n      path: '',\n      isDownloaded: false,\n      progress: 0\n    };\n    _this.lastRNBFTask = null;\n    return _this;\n  }\n  _createClass(Pdf, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this2 = this;\n      var nextSource = Image.resolveAssetSource(this.props.source);\n      var curSource = Image.resolveAssetSource(prevProps.source);\n      if (nextSource.uri !== curSource.uri) {\n        if (this.lastRNBFTask) {\n          this.lastRNBFTask.cancel(function (err) {\n            _this2._loadFromSource(_this2.props.source);\n          });\n          this.lastRNBFTask = null;\n        } else {\n          this._loadFromSource(this.props.source);\n        }\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._mounted = true;\n      this._loadFromSource(this.props.source);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._mounted = false;\n      if (this.lastRNBFTask) {\n        this.lastRNBFTask.cancel(function (err) {});\n        this.lastRNBFTask = null;\n      }\n    }\n  }, {\n    key: \"setPage\",\n    value: function setPage(pageNumber) {\n      var _global;\n      if (pageNumber === null || isNaN(pageNumber)) {\n        throw new Error('Specified pageNumber is not a number');\n      }\n      if (!!((_global = global) != null && _global.nativeFabricUIManager)) {\n        if (this._root) {\n          PdfViewCommands.setNativePage(this._root, pageNumber);\n        }\n      } else {\n        this.setNativeProps({\n          page: pageNumber\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      if (Platform.OS === \"android\" || Platform.OS === \"ios\" || Platform.OS === \"windows\") {\n        return _jsx(View, {\n          style: [this.props.style, {\n            overflow: 'hidden'\n          }],\n          children: !this.state.isDownloaded ? _jsx(View, {\n            style: styles.progressContainer,\n            children: this.props.renderActivityIndicator ? this.props.renderActivityIndicator(this.state.progress) : _jsx(Text, {\n              children: `${(this.state.progress * 100).toFixed(2)}%`\n            })\n          }) : Platform.OS === \"android\" || Platform.OS === \"windows\" ? _jsx(PdfCustom, _objectSpread(_objectSpread({\n            ref: function ref(component) {\n              return _this3._root = component;\n            }\n          }, this.props), {}, {\n            style: [{\n              flex: 1,\n              backgroundColor: '#EEE'\n            }, this.props.style],\n            path: this.state.path,\n            onChange: this._onChange\n          })) : this.props.usePDFKit ? _jsx(PdfCustom, _objectSpread(_objectSpread({\n            ref: function ref(component) {\n              return _this3._root = component;\n            }\n          }, this.props), {}, {\n            style: [{\n              backgroundColor: '#EEE',\n              overflow: 'hidden'\n            }, this.props.style],\n            path: this.state.path,\n            onChange: this._onChange\n          })) : _jsx(PdfView, _objectSpread(_objectSpread({}, this.props), {}, {\n            style: [{\n              backgroundColor: '#EEE',\n              overflow: 'hidden'\n            }, this.props.style],\n            path: this.state.path,\n            onLoadComplete: this.props.onLoadComplete,\n            onPageChanged: this.props.onPageChanged,\n            onError: this._onError,\n            onPageSingleTap: this.props.onPageSingleTap,\n            onScaleChanged: this.props.onScaleChanged,\n            onPressLink: this.props.onPressLink\n          }))\n        });\n      } else {\n        return null;\n      }\n    }\n  }]);\n  return Pdf;\n}(Component);\nPdf.propTypes = _objectSpread(_objectSpread({}, ViewPropTypes), {}, {\n  source: PropTypes.oneOfType([PropTypes.shape({\n    uri: PropTypes.string,\n    cache: PropTypes.bool,\n    cacheFileName: PropTypes.string,\n    expiration: PropTypes.number\n  }), PropTypes.number]).isRequired,\n  page: PropTypes.number,\n  scale: PropTypes.number,\n  minScale: PropTypes.number,\n  maxScale: PropTypes.number,\n  horizontal: PropTypes.bool,\n  spacing: PropTypes.number,\n  password: PropTypes.string,\n  renderActivityIndicator: PropTypes.func,\n  enableAntialiasing: PropTypes.bool,\n  enableAnnotationRendering: PropTypes.bool,\n  showsHorizontalScrollIndicator: PropTypes.bool,\n  showsVerticalScrollIndicator: PropTypes.bool,\n  enablePaging: PropTypes.bool,\n  enableRTL: PropTypes.bool,\n  fitPolicy: PropTypes.number,\n  trustAllCerts: PropTypes.bool,\n  singlePage: PropTypes.bool,\n  onLoadComplete: PropTypes.func,\n  onPageChanged: PropTypes.func,\n  onError: PropTypes.func,\n  onPageSingleTap: PropTypes.func,\n  onScaleChanged: PropTypes.func,\n  onPressLink: PropTypes.func,\n  accessibilityLabel: PropTypes.string,\n  importantForAccessibility: PropTypes.string,\n  renderToHardwareTextureAndroid: PropTypes.string,\n  testID: PropTypes.string,\n  onLayout: PropTypes.bool,\n  accessibilityLiveRegion: PropTypes.string,\n  accessibilityComponentType: PropTypes.string\n});\nPdf.defaultProps = {\n  password: \"\",\n  scale: 1,\n  minScale: 1,\n  maxScale: 3,\n  spacing: 10,\n  fitPolicy: 2,\n  horizontal: false,\n  page: 1,\n  enableAntialiasing: true,\n  enableAnnotationRendering: true,\n  showsHorizontalScrollIndicator: true,\n  showsVerticalScrollIndicator: true,\n  enablePaging: false,\n  enableRTL: false,\n  trustAllCerts: true,\n  usePDFKit: true,\n  singlePage: false,\n  onLoadProgress: function onLoadProgress(percent) {},\n  onLoadComplete: function onLoadComplete(numberOfPages, path) {},\n  onPageChanged: function onPageChanged(page, numberOfPages) {},\n  onError: function onError(error) {},\n  onPageSingleTap: function onPageSingleTap(page, x, y) {},\n  onScaleChanged: function onScaleChanged(scale) {},\n  onPressLink: function onPressLink(url) {}\n};\nexport { Pdf as default };\nif (Platform.OS === \"android\" || Platform.OS === \"ios\") {\n  var PdfCustom = PdfViewNativeComponent;\n} else if (Platform.OS === \"windows\") {\n  var PdfCustom = requireNativeComponent('RCTPdf', Pdf, {\n    nativeOnly: {\n      path: true,\n      onChange: true\n    }\n  });\n}\nvar styles = StyleSheet.create({\n  progressContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  progressBar: {\n    width: 200,\n    height: 2\n  }\n});","map":{"version":3,"names":["_defineProperty","_asyncToGenerator","_classCallCheck","_createClass","_inherits","_possibleConstructorReturn","_getPrototypeOf","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","sham","Proxy","Boolean","prototype","valueOf","call","React","Component","PropTypes","View","Platform","StyleSheet","Image","Text","requireNativeComponent","PdfViewNativeComponent","Commands","PdfViewCommands","ReactNativeBlobUtil","ViewPropTypes","SHA1","require","PdfView","jsx","_jsx","Pdf","_Component","_super","props","_this","_loadFromSource","newSource","source","resolveAssetSource","uri","_mounted","setState","isDownloaded","path","progress","filename","cacheFileName","cacheFile","fs","dirs","CacheDir","cache","stat","then","stats","expiration","lastModified","Date","getTime","_prepareFile","catch","_ref","isNetwork","match","isAsset","isBase64","_unlinkFile","_downloadFile","cp","_ref2","error","_onError","_x2","data","replace","writeFile","_ref3","_x3","unescape","Error","_x","_ref4","lastRNBFTask","cancel","err","tempCacheFile","config","trusty","trustAllCerts","fetch","method","headers","body","received","total","onLoadProgress","_ref5","_x6","_ref6","res","respInfo","expectedContentLength","actualContentLength","fileStats","size","_ref7","_x8","_x7","_ref8","_x9","_x4","_x5","_ref9","file","unlink","_x10","setNativeProps","nativeProps","_root","_onChange","event","message","nativeEvent","split","splice","join","tableContents","JSON","parse","onLoadComplete","Number","state","width","height","onPageChanged","onPageSingleTap","onScaleChanged","onPressLink","onError","key","value","componentDidUpdate","prevProps","_this2","nextSource","curSource","componentDidMount","componentWillUnmount","setPage","pageNumber","_global","isNaN","global","nativeFabricUIManager","setNativePage","page","render","_this3","OS","style","overflow","children","styles","progressContainer","renderActivityIndicator","toFixed","PdfCustom","ref","component","flex","backgroundColor","onChange","usePDFKit","propTypes","oneOfType","shape","string","bool","number","isRequired","scale","minScale","maxScale","horizontal","spacing","password","func","enableAntialiasing","enableAnnotationRendering","showsHorizontalScrollIndicator","showsVerticalScrollIndicator","enablePaging","enableRTL","fitPolicy","singlePage","accessibilityLabel","importantForAccessibility","renderToHardwareTextureAndroid","testID","onLayout","accessibilityLiveRegion","accessibilityComponentType","defaultProps","percent","numberOfPages","x","y","url","default","nativeOnly","create","justifyContent","alignItems","progressBar"],"sources":["E:/MobApp/ConvoTalk2_ContextApi/node_modules/react-native-pdf/index.js"],"sourcesContent":["/**\n * Copyright (c) 2017-present, Wonday (@wonday.org)\n * All rights reserved.\n *\n * This source code is licensed under the MIT-style license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    View,\n    Platform,\n    StyleSheet,\n    Image,\n    Text,\n    requireNativeComponent\n} from 'react-native';\nimport PdfViewNativeComponent, {\n    Commands as PdfViewCommands,\n  } from './fabric/RNPDFPdfNativeComponent';\nimport ReactNativeBlobUtil from 'react-native-blob-util'\nimport {ViewPropTypes} from 'deprecated-react-native-prop-types';\nconst SHA1 = require('crypto-js/sha1');\nimport PdfView from './PdfView';\n\nexport default class Pdf extends Component {\n\n    static propTypes = {\n        ...ViewPropTypes,\n        source: PropTypes.oneOfType([\n            PropTypes.shape({\n                uri: PropTypes.string,\n                cache: PropTypes.bool,\n                cacheFileName: PropTypes.string,\n                expiration: PropTypes.number,\n            }),\n            // Opaque type returned by require('./test.pdf')\n            PropTypes.number,\n        ]).isRequired,\n        page: PropTypes.number,\n        scale: PropTypes.number,\n        minScale: PropTypes.number,\n        maxScale: PropTypes.number,\n        horizontal: PropTypes.bool,\n        spacing: PropTypes.number,\n        password: PropTypes.string,\n        renderActivityIndicator: PropTypes.func,\n        enableAntialiasing: PropTypes.bool,\n        enableAnnotationRendering: PropTypes.bool,\n        showsHorizontalScrollIndicator: PropTypes.bool,\n        showsVerticalScrollIndicator: PropTypes.bool,\n        enablePaging: PropTypes.bool,\n        enableRTL: PropTypes.bool,\n        fitPolicy: PropTypes.number,\n        trustAllCerts: PropTypes.bool,\n        singlePage: PropTypes.bool,\n        onLoadComplete: PropTypes.func,\n        onPageChanged: PropTypes.func,\n        onError: PropTypes.func,\n        onPageSingleTap: PropTypes.func,\n        onScaleChanged: PropTypes.func,\n        onPressLink: PropTypes.func,\n\n        // Props that are not available in the earlier react native version, added to prevent crashed on android\n        accessibilityLabel: PropTypes.string,\n        importantForAccessibility: PropTypes.string,\n        renderToHardwareTextureAndroid: PropTypes.string,\n        testID: PropTypes.string,\n        onLayout: PropTypes.bool,\n        accessibilityLiveRegion: PropTypes.string,\n        accessibilityComponentType: PropTypes.string,\n    };\n\n    static defaultProps = {\n        password: \"\",\n        scale: 1,\n        minScale: 1,\n        maxScale: 3,\n        spacing: 10,\n        fitPolicy: 2, //fit both\n        horizontal: false,\n        page: 1,\n        enableAntialiasing: true,\n        enableAnnotationRendering: true,\n        showsHorizontalScrollIndicator: true,\n        showsVerticalScrollIndicator: true,\n        enablePaging: false,\n        enableRTL: false,\n        trustAllCerts: true,\n        usePDFKit: true,\n        singlePage: false,\n        onLoadProgress: (percent) => {\n        },\n        onLoadComplete: (numberOfPages, path) => {\n        },\n        onPageChanged: (page, numberOfPages) => {\n        },\n        onError: (error) => {\n        },\n        onPageSingleTap: (page, x, y) => {\n        },\n        onScaleChanged: (scale) => {\n        },\n        onPressLink: (url) => {\n        },\n    };\n\n    constructor(props) {\n\n        super(props);\n        this.state = {\n            path: '',\n            isDownloaded: false,\n            progress: 0,\n        };\n\n        this.lastRNBFTask = null;\n\n    }\n\n    componentDidUpdate(prevProps) {\n\n        const nextSource = Image.resolveAssetSource(this.props.source);\n        const curSource = Image.resolveAssetSource(prevProps.source);\n\n        if ((nextSource.uri !== curSource.uri)) {\n            // if has download task, then cancel it.\n            if (this.lastRNBFTask) {\n                this.lastRNBFTask.cancel(err => {\n                    this._loadFromSource(this.props.source);\n                });\n                this.lastRNBFTask = null;\n            } else {\n                this._loadFromSource(this.props.source);\n            }\n        }\n    }\n\n    componentDidMount() {\n        this._mounted = true;\n        this._loadFromSource(this.props.source);\n    }\n\n    componentWillUnmount() {\n        this._mounted = false;\n        if (this.lastRNBFTask) {\n            this.lastRNBFTask.cancel(err => {\n            });\n            this.lastRNBFTask = null;\n        }\n\n    }\n\n    _loadFromSource = (newSource) => {\n\n        const source = Image.resolveAssetSource(newSource) || {};\n\n        let uri = source.uri || '';\n        // first set to initial state\n        if (this._mounted) {\n            this.setState({isDownloaded: false, path: '', progress: 0});\n        }\n        const filename = source.cacheFileName || SHA1(uri) + '.pdf';\n        const cacheFile = ReactNativeBlobUtil.fs.dirs.CacheDir + '/' + filename;\n\n        if (source.cache) {\n            ReactNativeBlobUtil.fs\n                .stat(cacheFile)\n                .then(stats => {\n                    if (!Boolean(source.expiration) || (source.expiration * 1000 + stats.lastModified) > (new Date().getTime())) {\n                        if (this._mounted) {\n                            this.setState({path: cacheFile, isDownloaded: true});\n                        }\n                    } else {\n                        // cache expirated then reload it\n                        this._prepareFile(source);\n                    }\n                })\n                .catch(() => {\n                    this._prepareFile(source);\n                })\n\n        } else {\n            this._prepareFile(source);\n        }\n    };\n\n    _prepareFile = async (source) => {\n\n        try {\n            if (source.uri) {\n                let uri = source.uri || '';\n\n                const isNetwork = !!(uri && uri.match(/^https?:\\/\\//));\n                const isAsset = !!(uri && uri.match(/^bundle-assets:\\/\\//));\n                const isBase64 = !!(uri && uri.match(/^data:application\\/pdf;base64/));\n\n                const filename = source.cacheFileName || SHA1(uri) + '.pdf';\n                const cacheFile = ReactNativeBlobUtil.fs.dirs.CacheDir + '/' + filename;\n\n                // delete old cache file\n                this._unlinkFile(cacheFile);\n\n                if (isNetwork) {\n                    this._downloadFile(source, cacheFile);\n                } else if (isAsset) {\n                    ReactNativeBlobUtil.fs\n                        .cp(uri, cacheFile)\n                        .then(() => {\n                            if (this._mounted) {\n                                this.setState({path: cacheFile, isDownloaded: true, progress: 1});\n                            }\n                        })\n                        .catch(async (error) => {\n                            this._unlinkFile(cacheFile);\n                            this._onError(error);\n                        })\n                } else if (isBase64) {\n                    let data = uri.replace(/data:application\\/pdf;base64,/i, '');\n                    ReactNativeBlobUtil.fs\n                        .writeFile(cacheFile, data, 'base64')\n                        .then(() => {\n                            if (this._mounted) {\n                                this.setState({path: cacheFile, isDownloaded: true, progress: 1});\n                            }\n                        })\n                        .catch(async (error) => {\n                            this._unlinkFile(cacheFile);\n                            this._onError(error)\n                        });\n                } else {\n                    if (this._mounted) {\n                       this.setState({\n                            path: unescape(uri.replace(/file:\\/\\//i, '')),\n                            isDownloaded: true,\n                        });\n                    }\n                }\n            } else {\n                this._onError(new Error('no pdf source!'));\n            }\n        } catch (e) {\n            this._onError(e)\n        }\n\n\n    };\n\n    _downloadFile = async (source, cacheFile) => {\n\n        if (this.lastRNBFTask) {\n            this.lastRNBFTask.cancel(err => {\n            });\n            this.lastRNBFTask = null;\n        }\n\n        const tempCacheFile = cacheFile + '.tmp';\n        this._unlinkFile(tempCacheFile);\n\n        this.lastRNBFTask = ReactNativeBlobUtil.config({\n            // response data will be saved to this path if it has access right.\n            path: tempCacheFile,\n            trusty: this.props.trustAllCerts,\n        })\n            .fetch(\n                source.method ? source.method : 'GET',\n                source.uri,\n                source.headers ? source.headers : {},\n                source.body ? source.body : \"\"\n            )\n            // listen to download progress event\n            .progress((received, total) => {\n                this.props.onLoadProgress && this.props.onLoadProgress(received / total);\n                if (this._mounted) {\n                    this.setState({progress: received / total});\n                }\n            })\n            .catch(async (error) => {\n                this._onError(error);\n            });\n\n        this.lastRNBFTask\n            .then(async (res) => {\n\n                this.lastRNBFTask = null;\n\n                if (res && res.respInfo && res.respInfo.headers && !res.respInfo.headers[\"Content-Encoding\"] && !res.respInfo.headers[\"Transfer-Encoding\"] && res.respInfo.headers[\"Content-Length\"]) {\n                    const expectedContentLength = res.respInfo.headers[\"Content-Length\"];\n                    let actualContentLength;\n\n                    try {\n                        const fileStats = await ReactNativeBlobUtil.fs.stat(res.path());\n\n                        if (!fileStats || !fileStats.size) {\n                            throw new Error(\"FileNotFound:\" + source.uri);\n                        }\n\n                        actualContentLength = fileStats.size;\n                    } catch (error) {\n                        throw new Error(\"DownloadFailed:\" + source.uri);\n                    }\n\n                    if (expectedContentLength != actualContentLength) {\n                        throw new Error(\"DownloadFailed:\" + source.uri);\n                    }\n                }\n\n                this._unlinkFile(cacheFile);\n                ReactNativeBlobUtil.fs\n                    .cp(tempCacheFile, cacheFile)\n                    .then(() => {\n                        if (this._mounted) {\n                            this.setState({path: cacheFile, isDownloaded: true, progress: 1});\n                        }\n                        this._unlinkFile(tempCacheFile);\n                    })\n                    .catch(async (error) => {\n                        throw error;\n                    });\n            })\n            .catch(async (error) => {\n                this._unlinkFile(tempCacheFile);\n                this._unlinkFile(cacheFile);\n                this._onError(error);\n            });\n\n    };\n\n    _unlinkFile = async (file) => {\n        try {\n            await ReactNativeBlobUtil.fs.unlink(file);\n        } catch (e) {\n\n        }\n    }\n\n    setNativeProps = nativeProps => {\n        if (this._root){\n            this._root.setNativeProps(nativeProps);\n        }\n    };\n\n    setPage( pageNumber ) {\n        if ( (pageNumber === null) || (isNaN(pageNumber)) ) {\n            throw new Error('Specified pageNumber is not a number');\n        }\n        if (!!global?.nativeFabricUIManager ) {\n            if (this._root) {\n                PdfViewCommands.setNativePage(\n                    this._root,\n                    pageNumber,\n                );\n            }\n          } else {\n            this.setNativeProps({\n                page: pageNumber\n            });\n          }\n        \n    }\n\n    _onChange = (event) => {\n\n        let message = event.nativeEvent.message.split('|');\n        //__DEV__ && console.log(\"onChange: \" + message);\n        if (message.length > 0) {\n            if (message.length > 5) {\n                message[4] = message.splice(4).join('|');\n            }\n            if (message[0] === 'loadComplete') {\n                let tableContents;\n                try {\n                    tableContents = message[4]&&JSON.parse(message[4]);\n                } catch(e) {\n                    tableContents = message[4];\n                }\n                this.props.onLoadComplete && this.props.onLoadComplete(Number(message[1]), this.state.path, {\n                    width: Number(message[2]),\n                    height: Number(message[3]),\n                },\n                tableContents\n                );\n            } else if (message[0] === 'pageChanged') {\n                this.props.onPageChanged && this.props.onPageChanged(Number(message[1]), Number(message[2]));\n            } else if (message[0] === 'error') {\n                this._onError(new Error(message[1]));\n            } else if (message[0] === 'pageSingleTap') {\n                this.props.onPageSingleTap && this.props.onPageSingleTap(Number(message[1]), Number(message[2]), Number(message[3]));\n            } else if (message[0] === 'scaleChanged') {\n                this.props.onScaleChanged && this.props.onScaleChanged(Number(message[1]));\n            } else if (message[0] === 'linkPressed') {\n                this.props.onPressLink && this.props.onPressLink(message[1]);\n            }\n        }\n\n    };\n\n    _onError = (error) => {\n\n        this.props.onError && this.props.onError(error);\n\n    };\n\n    render() {\n        if (Platform.OS === \"android\" || Platform.OS === \"ios\" || Platform.OS === \"windows\") {\n                return (\n                    <View style={[this.props.style,{overflow: 'hidden'}]}>\n                        {!this.state.isDownloaded?\n                            (<View\n                                style={styles.progressContainer}\n                            >\n                                {this.props.renderActivityIndicator\n                                    ? this.props.renderActivityIndicator(this.state.progress)\n                                    : <Text>{`${(this.state.progress * 100).toFixed(2)}%`}</Text>}\n                            </View>):(\n                                Platform.OS === \"android\" || Platform.OS === \"windows\"?(\n                                        <PdfCustom\n                                            ref={component => (this._root = component)}\n                                            {...this.props}\n                                            style={[{flex:1,backgroundColor: '#EEE'}, this.props.style]}\n                                            path={this.state.path}\n                                            onChange={this._onChange}\n                                        />\n                                    ):(\n                                        this.props.usePDFKit ?(\n                                                <PdfCustom\n                                                    ref={component => (this._root = component)}\n                                                    {...this.props}\n                                                    style={[{backgroundColor: '#EEE',overflow: 'hidden'}, this.props.style]}\n                                                    path={this.state.path}\n                                                    onChange={this._onChange}\n                                                />\n                                            ):(<PdfView\n                                                {...this.props}\n                                                style={[{backgroundColor: '#EEE',overflow: 'hidden'}, this.props.style]}\n                                                path={this.state.path}\n                                                onLoadComplete={this.props.onLoadComplete}\n                                                onPageChanged={this.props.onPageChanged}\n                                                onError={this._onError}\n                                                onPageSingleTap={this.props.onPageSingleTap}\n                                                onScaleChanged={this.props.onScaleChanged}\n                                                onPressLink={this.props.onPressLink}\n                                            />)\n                                    )\n                                )}\n                    </View>);\n        } else {\n            return (null);\n        }\n\n\n    }\n}\n\nif (Platform.OS === \"android\" || Platform.OS === \"ios\") {\n    var PdfCustom = PdfViewNativeComponent;\n}  else if (Platform.OS === \"windows\") {\n    var PdfCustom = requireNativeComponent('RCTPdf', Pdf, {\n        nativeOnly: {path: true, onChange: true},\n    })\n}\n\nconst styles = StyleSheet.create({\n    progressContainer: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    progressBar: {\n        width: 200,\n        height: 2\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}